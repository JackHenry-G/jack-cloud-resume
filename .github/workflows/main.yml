name: Python package

on: [push]

jobs:

  # this is a simple template retrieved and modified from here - https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python
  lambda_tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10"]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          pip install boto3
          pip install moto[dyamodb]
          pip install botocore
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Test with pytest
        run: |
          pytest Lambda/test*

  build-and-deploy-infra:
    needs: lambda_tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
      - uses: aws-actions/setup-sam@v1
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1 # keys are not region specific
      - run: sam build --use-container
        #working-directory: cloud-resume-challenge
      - run: sam deploy --no-confirm-changeset --no-fail-on-empty-changeset # not going to ask questions as we can't answer them from here / we don't want to fail it when there is no changes
        #working-directory: cloud-resume-challenge
  
  # runs in parallel rather than relying on deploying infra
  # as you may only want to change the front-end
  deploy-site:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: jakejarvis/s3-sync-action@master # uses pre-made github action
        with:
          args: --delete # does a clear up of the old/additional files
        env:
          AWS_S3_BUCKET: cloudresumechallenge-website # defined in template file
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          SOURCE_DIR: resume-site